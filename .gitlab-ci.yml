image: alpine

stages:
  - build
  - publish

build-linux:
  stage: build
  image: rust:latest
  script:
    - export SOURCE_DIR="$(pwd)"
    - cd /
    - wget https://github.com/Kitware/CMake/releases/download/v3.16.7/cmake-3.16.7-Linux-x86_64.tar.gz
    - tar -xzf cmake-3.16.7-Linux-x86_64.tar.gz
    - export PATH="$PATH:/cmake-3.16.7-Linux-x86_64/bin"
    - apt update
    - apt -y install llvm-7 libxrandr-dev libxinerama-dev libxcursor-dev libasound-dev
    - export LLVM_SYS_70_PREFIX=/usr/bin/llvm-7/
    - cd $SOURCE_DIR
    - cd frontends/juce/
    - git submodule init
    - git submodule update
    - ./build_linux.sh release
  only:
    - master
    - merge_requests
  artifacts:
    expire_in: 2h
    paths:
      - frontends/juce/artifacts/

build-windows:
  tags:
    - shared-windows
    - windows
    - windows-1809
  stage: build
  script:
    - choco install cmake -y --version=3.16.7 --installargs 'ADD_CMAKE_TO_PATH=System'
    - choco install rust -y
    - choco install mingw -y
    - choco install windows-sdk-10.0 -y
    - cargo install llvmenv
    - llvmenv init
    - llvmenv build-entry 7.0.0
    - cd frontends/juce/
    - git submodule init
    - git submodule update
    - .\build_win
  only:
    - master
    - merge_requests
  artifacts:
    expire_in: 2h
    paths:
      - frontends/juce/artifacts/

build-website:
  stage: build
  image: alpine
  script:
    - cd docs/website
    - mkdir artifacts
    - cp -r src/* artifacts/
  only:
    - master
  artifacts:
    expire_in: 2h
    paths:
      - docs/website/artifacts/

pages:
  stage: publish
  image: alpine
  script:
    - mkdir public
    - mv docs/website/artifacts/* public/
    - mkdir public/builds/
    - mv frontends/juce/artifacts/* public/builds/
  only:
    - master
  artifacts:
    paths:
      - public
