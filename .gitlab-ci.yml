image: alpine

stages:
  - build
  - publish

build-linux:
  stage: build
  image: rust:latest
  script:
    - export SOURCE_DIR="$(pwd)"
    - cd /
    - echo "and of course the default package registry has some old-ass version of cmake"
    - wget https://github.com/Kitware/CMake/releases/download/v3.16.7/cmake-3.16.7-Linux-x86_64.tar.gz
    - tar -xzf cmake-3.16.7-Linux-x86_64.tar.gz
    - export PATH="$PATH:/cmake-3.16.7-Linux-x86_64/bin"
    - apt update
    - apt -y install llvm-7 libxrandr-dev libxinerama-dev libxcursor-dev libasound-dev
    - export LLVM_SYS_70_PREFIX=/usr/bin/llvm-7/
    - cd $SOURCE_DIR
    - cd frontends/juce/
    - git submodule init
    - git submodule update
    - ./build_linux.sh release
  only:
    - master
    - merge_requests
  artifacts:
    expire_in: 2h
    paths:
      - frontends/juce/artifacts/

build-windows:
  tags:
    - shared-windows
    - windows
    - windows-1809
  stage: build
  script:
    - choco install cmake.install -y --version=3.16.7 --installargs 'ADD_CMAKE_TO_PATH=User'
    - refreshenv
    - echo "Despite the fact that chocolatey promises that refreshenv works, it in fact does absolutely nothing and is useless"
    - $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
    - cmake --version
    - choco install rust --version=1.41.0 -y
    - choco install mingw -y
    - choco install windows-sdk-10.0 -y
    - echo "this script fills me with pain"
    - echo "chocolatey's llvm package is missing a binary only available when compiling from source"
    - echo "llvmenv refuses to build and causes an out of memory error or something"
    - echo "so now I have to install fucking 7zip"
    - Invoke-WebRequest -Uri "https://github.com/llvm/llvm-project/releases/download/llvmorg-7.1.0/llvm-7.1.0.src.tar.xz" -OutFile "llvm_src.tar.xz"
    - choco install 7zip -y
    - 7z e llvm_src.tar.xz
    - 7z x llvm_src.tar
    - cd llvm-7.1.0.src
    - mkdir build
    - cd build
    - refreshenv
    - cmake -Thost=x64 ..
    - cmake --build .
    - mkdir "C:\LLVM"
    - cmake -DCMAKE_INSTALL_PREFIX="C:\LLVM" -P cmake_install.cmake
    - cd ../..
    - cd frontends/juce/
    - git submodule init
    - git submodule update
    - $Env:LLVM_SYS_70_PREFIX="C:\LLVM"
    - .\build_win
  only:
    - master
    - merge_requests
  artifacts:
    expire_in: 2h
    paths:
      - frontends/juce/artifacts/

build-website:
  stage: build
  image: alpine
  script:
    - cd docs/website
    - mkdir artifacts
    - cp -r src/* artifacts/
  only:
    - master
  artifacts:
    expire_in: 2h
    paths:
      - docs/website/artifacts/

pages:
  stage: publish
  image: alpine
  script:
    - mkdir public
    - mv docs/website/artifacts/* public/
    - mkdir public/builds/
    - mv frontends/juce/artifacts/* public/builds/
  only:
    - master
  artifacts:
    paths:
      - public
