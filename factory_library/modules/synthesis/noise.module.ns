[BUFFER_LENGTH]FLOAT audio;

AUTO delay = MAX_DELAY * delay_mul;

static old_value, new_value, old_value_time {
    FLOAT old_value = 0.0;
    FLOAT new_value = 0.0;
    FLOAT old_value_time = 0.0;
}

for i = 0 to BUFFER_LENGTH no_unroll {
    FLOAT delay_now = delay[i?][0?];
    FLOAT value_now;
    if delay_now <= 1.0 / SAMPLE_RATE {
        old_value = new_value;
        new_value = CrapRand();
        value_now = old_value;
        old_value_time = global_note_time[i];
    } else {
        if old_value_time + delay_now <= global_note_time[i] {
            old_value = new_value;
            new_value = CrapRand();
            old_value_time = old_value_time + delay_now;
        }
        FLOAT factor = (global_note_time[i] - old_value_time) / delay_now;
        if SMOOTH_MODE == 0 {
            value_now = old_value;
        } else {
            value_now = new_value * factor + old_value * (1.0 - factor);
        }
    }
    audio[i] = value_now * amplitude[i?][0?];
}

if global_update_feedback_data {
    // We use this instead of CrapRand() so that the waveform display doesn't violently flicker
    // every time it is updated.
    [42]FLOAT DUMMY_WAVEFORM = [
        0.3988945908, 0.8954911673, 0.0116554042, 0.0909389386, 0.0893340926, 0.4953123474, 
        0.5784687653, 0.2548134842, 0.1776265054, 0.3360827756, 0.3734218081, 0.6334027459,
        0.8120340729, 0.1525260985, 0.0720461340, 0.3180398718, 0.3208139232, 0.9439490845, 
        0.0996337096, 0.3485065303, 0.7917933350, 0.8462610756, 0.4970552639, 0.9443231657,
        0.1459758690, 0.1334774229, 0.0101744474, 0.2696308750, 0.1566415042, 0.2585378565,
        0.3350715841, 0.6044406241, 0.0164770681, 0.5227222970, 0.3939237240, 0.1516453785,
        0.7058609147, 0.4322837979, 0.3666769617, 0.9135396160, 0.7535281491, 0.1228587420, 
    ];
    macro WaveformQuoteUnquote(buffer_pos, phase):(value) {
        FLOAT waveform_pos = phase * 41.999 / (1.0 + 40.0 * delay_mul[buffer_pos?][0?]);
        FLOAT value;
        if SMOOTH_MODE == 0 {
            value = DUMMY_WAVEFORM[Ftoi(waveform_pos)];
        } else {
            FLOAT from = DUMMY_WAVEFORM[Ftoi(waveform_pos)];
            FLOAT vto = DUMMY_WAVEFORM[Ftoi(waveform_pos) + 1];
            FLOAT amount = waveform_pos % 1.0;
            value = vto * amount + from * (1.0 - amount);
        }
        value = (value * 2.0 - 1.0) * amplitude[buffer_pos?][0?];
    }
    DisplayWaveform(SetGraphFeedback, WaveformQuoteUnquote);
}
