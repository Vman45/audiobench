TRIGGER out_trigger = FALSE;

static base_time, last_step {
    FLOAT base_time = 0.0;
    INT last_step = -1;
}

INT NUM_STEPS = (SEQUENCE:DIMS)[0];
assert SEQUENCE:TYPE == [NUM_STEPS]BOOL;
AUTO timing = GetTiming(TIMING_MODE);
assert timing:TYPE == [BUFFER_LENGTH]FLOAT;

if global_update_feedback_data {
    FLOAT value = ((timing[0] - base_time) / STEP_TIME) % Itof(NUM_STEPS);
    DisplayTriggerSequencePlayhead(SetPlayheadFeedback, value);
}

for i = 0 to BUFFER_LENGTH no_unroll {
    if reset[i?] {
        base_time = timing[i];
    }
    INT step_now = Ftoi((timing[i] - base_time) / STEP_TIME) % NUM_STEPS;
    if last_step != step_now {
        last_step = step_now;
        out_trigger[i] = SEQUENCE[step_now];
    }
}
